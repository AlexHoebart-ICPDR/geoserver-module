<?php

/**
 * @file
 * This file holds the functions for the installing
 * and enabling of the geoserver module.
 *
 * @ingroup geoserver
 */

/**
 * Implements hook_install().
 */
function geoserver_install() {
  // Dynamically generated variable data was detected on the following lines.
}

/**
 * Implements hook_uninstall().
 */
function geoserver_uninstall() {
  // Remove configuration.
  config_del('geoserver.settings');
}

/**
 * Implements hook_schema().
 */
function geoserver_schema() {
  $schema = array();

  // Layer table (ctools extras).
  $schema['geoserver_layers'] = array(
    'description' => 'Storage for user defined GeoServer layers.',
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'name',
      'identifier' => 'geoserver_layers',
      'default hook' => 'geoserver_layers',
      'save callback' => 'geoserver_layer_save',
      'delete callback' => 'geoserver_layer_delete',
      'api' => array(
        'owner' => 'geoserver',
        'api' => 'geoserver_layers',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'description' => 'Layer name.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'description' => 'Layer title.',
      ),
      'description' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Layer description.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'Layer data serialized.',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'name' => array('name'),
    ),
  );

  // Style table (ctools extras).
  $schema['geoserver_styles'] = array(
    'description' => 'Storage for user defined GeoServer styles.',
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'name',
      'identifier' => 'geoserver_styles',
      'default hook' => 'geoserver_styles',
      'save callback' => 'geoserver_style_save',
      'delete callback' => 'geoserver_style_delete',
      'api' => array(
        'owner' => 'geoserver',
        'api' => 'geoserver_styles',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'Style name.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'Style title.',
      ),
      'description' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Style description.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'Style SLD.',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'name' => array('name'),
    ),
  );

  $schema['geoserver_pk_metadata_table'] = array(
    'description' => 'Specifies which columns to use and what strategy to use to generate new primary key value.',
    'fields' => array(
      'table_schema' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
        'description' => 'Name of the database schema in which the table is located.',
      ),
      'table_name' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
        'description' => 'Name of the table to be published.',
      ),
      'pk_column' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
        'description' => 'Name of a column used to form the feauture IDs.',
      ),
      'pk_column_idx' => array(
        'type' => 'int',
        'description' => 'Index of the column in a multi-column key. In case multi column keys are needed multiple records with the same table schema and table name will be used.',
      ),
      'pk_policy' => array(
        'type' => 'varchar',
        'length' => '32',
        'description' => 'The new value generation policy (sequence, assigned, autoincrement), used in case a new feature needs to be added in the table (following a WFS-T insert operation).',
      ),
      'pk_sequence' => array(
        'type' => 'varchar',
        'length' => '64',
        'description' => 'The name of the database sequence to be used when generating a new value for the pk_column.',
      ),
    ),
    'unique keys' => array(
      'schema_table_column' => array('table_schema', 'table_name', 'pk_column'),
    ),
  );

  return $schema;
}

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function geoserver_update_7100() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function geoserver_update_7101() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function geoserver_update_7102() { }

/**
 * Implements hook_update_last_removed().
 */
function geoserver_update_last_removed() {
  return 7102;
}

/**
 * Migrate geoserver variables to config.
 */
function geoserver_update_1000() {
  $config = config('geoserver.settings');
  $config->set('geoserver_workspace', update_variable_get('geoserver_workspace', ''));
  $config->set('geoserver_next_execution', update_variable_get('geoserver_next_execution', '0'));
  $config->set('geoserver_url', update_variable_get('geoserver_url', ''));
  $config->set('geoserver_workspace_support', update_variable_get('geoserver_workspace_support', array()));
  $config->set('geoserver_content_type_settings', update_variable_get('geoserver_content_type_settings', array()));
  $config->save();

  update_variable_del('geoserver_workspace');
  update_variable_del('geoserver_next_execution');
  update_variable_del('geoserver_url');
  update_variable_del('geoserver_workspace_support');
  update_variable_del('geoserver_content_type_settings');
}
